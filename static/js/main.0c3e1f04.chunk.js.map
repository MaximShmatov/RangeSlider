{"version":3,"sources":["components/RangeSlider/styles-hor.module.sass","components/RangeSlider/styles-ver.module.sass","components/RangeSlider/reducer.ts","store.ts","components/RangeSlider/RangeSlider.tsx","components/ControlPanel/ControlPanel.tsx","index.tsx"],"names":["module","exports","defaultState","minValue","maxValue","valueFrom","valueTo","stepSize","isRange","isTooltip","isScale","isVertical","reducer","currentState","action","state","type","value","step","Math","round","maxStep","abs","rootState","rangeSlider","store","createStore","appState","id","rangeSliderReducer","mapRangeSliderSelector","props","map","item","useSelector","useMapRangeSliderDispatch","dispatch","useDispatch","Context","createContext","stylesHor","RangeSliderThumb","thumbFor","useContext","styles","rangeSliderId","setValue","posToPercent","position","posThumb","left","top","thumbRef","useRef","handleDocumentMouseup","document","removeEventListener","handleDocumentMousemove","evt","parent","current","parentElement","rect","getBoundingClientRect","clientXorY","clientY","clientX","offsetXorY","widthOrHeight","height","width","onMouseDown","preventDefault","addEventListener","style","ref","className","thumb","thumb__tooltip","RangeSliderRail","positionFrom","positionTo","posProgress","right","bottom","rail","progress","RangeSliderScale","setValueFrom","setValueTo","subdivision","scale__subdivision","division","scale__division","useState","toggle","setToggle","scale","currentTarget","scale__wrapper","scale__values","scale__valuesItem","toFixed","RangeSlider","stylesVer","Provider","slider","ControlPanel","setMinValue","setMaxValue","setStepSize","setIsRange","setIsTooltip","setIsScale","setIsVertical","minValueState","setMinValueState","maxValueState","setMaxValueState","valueFromState","setValueFromState","valueToState","setValueToState","stepSizeState","setStepSizeState","useEffect","useMemo","onChange","Number","target","onBlur","checked","Boolean","ReactDOM","render","StrictMode","querySelector"],"mappings":"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","file":"static/js/main.0c3e1f04.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"slider\":\"styles-hor_slider__v6Ig2\",\"rail\":\"styles-hor_rail__fVKPY\",\"thumb\":\"styles-hor_thumb__2T3yt\",\"thumb__tooltip\":\"styles-hor_thumb__tooltip__1zeDJ\",\"progress\":\"styles-hor_progress__2eJza\",\"scale\":\"styles-hor_scale__339vY\",\"scale__wrapper\":\"styles-hor_scale__wrapper__1wpm3\",\"scale__division\":\"styles-hor_scale__division__1WoHE\",\"scale__subdivision\":\"styles-hor_scale__subdivision__1Olej\",\"scale__values\":\"styles-hor_scale__values__1R5Av\",\"scale__valuesItem\":\"styles-hor_scale__valuesItem__1hUy1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slider\":\"styles-ver_slider__GFitD\",\"rail\":\"styles-ver_rail__D9cTf\",\"thumb\":\"styles-ver_thumb__1yzdH\",\"thumb__tooltip\":\"styles-ver_thumb__tooltip__3EdW-\",\"progress\":\"styles-ver_progress__3qSq0\",\"scale\":\"styles-ver_scale__3GZz1\",\"scale__wrapper\":\"styles-ver_scale__wrapper__-DEtc\",\"scale__division\":\"styles-ver_scale__division__gZB06\",\"scale__subdivision\":\"styles-ver_scale__subdivision__2R4R-\",\"scale__values\":\"styles-ver_scale__values__3UV3P\",\"scale__valuesItem\":\"styles-ver_scale__valuesItem__2u3Bf\"};","const defaultState = {\r\n  minValue: 0,\r\n  maxValue: 1,\r\n  valueFrom: 0,\r\n  valueTo: 1,\r\n  stepSize: 1,\r\n  isRange: false,\r\n  isTooltip: false,\r\n  isScale: false,\r\n  isVertical: false,\r\n}\r\n\r\nconst reducer = (currentState: TRangeSliderState = defaultState, action: TRangeSliderAction) => {\r\n  const state = {...currentState};\r\n  switch (action.type) {\r\n    case 'isRange':\r\n      state.isRange = action.value as boolean;\r\n      if (action.value && state.valueTo < state.valueFrom) {\r\n        state.valueTo = state.valueFrom;\r\n      }\r\n      return state;\r\n    case 'isTooltip':\r\n      state.isTooltip = action.value as boolean;\r\n      return state;\r\n    case 'isScale':\r\n      state.isScale = action.value as boolean;\r\n      return state;\r\n    case 'isVertical':\r\n      state.isVertical = action.value as boolean;\r\n      return state;\r\n    case 'minValue':\r\n      const minValue = action.value as number;\r\n      if (minValue < state.valueFrom) {\r\n        const step = Math.round((state.valueFrom - minValue) / state.stepSize) * state.stepSize;\r\n        state.minValue = state.valueFrom - step;\r\n      } else {\r\n        state.minValue = state.valueFrom;\r\n      }\r\n      if (state.minValue === state.maxValue) {\r\n        state.minValue -= state.stepSize;\r\n      }\r\n      return state;\r\n    case 'stepSize':\r\n      let stepSize = action.value as number;\r\n      const maxStep = Math.abs(state.maxValue - state.minValue);\r\n      stepSize = Math.abs(Math.round(stepSize));\r\n      if (maxStep % stepSize !== 0) {\r\n        while (maxStep % stepSize !== 0) {\r\n          stepSize -= 1;\r\n          if (stepSize <= 0) {\r\n            state.stepSize = 1;\r\n            return state;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (stepSize < maxStep && stepSize > 0) {\r\n        state.stepSize = Math.round(stepSize);\r\n      } else if (stepSize >= maxStep) {\r\n        state.stepSize = maxStep;\r\n      } else {\r\n        state.stepSize = 1;\r\n      }\r\n\r\n      if (state.valueFrom > state.minValue) {\r\n        state.valueFrom = Math.round((state.valueFrom - state.minValue) / state.stepSize);\r\n        state.valueFrom = state.valueFrom * state.stepSize + state.minValue;\r\n      } else {\r\n        state.valueFrom = state.minValue;\r\n      }\r\n\r\n      if (state.isRange) {\r\n        if (state.valueTo > state.valueFrom) {\r\n          state.valueTo = Math.round((state.valueTo - state.minValue) / state.stepSize);\r\n          state.valueTo = state.valueTo * state.stepSize + state.minValue;\r\n        } else {\r\n          state.valueTo = state.valueFrom;\r\n        }\r\n      }\r\n      return state;\r\n    case 'maxValue':\r\n      const maxValue = action.value as number;\r\n      if (state.isRange && maxValue <= state.valueTo) {\r\n        state.maxValue = state.valueTo;\r\n      } else if (maxValue <= state.valueFrom) {\r\n        state.maxValue = state.valueFrom;\r\n      } else {\r\n        state.maxValue = Math.round((maxValue - state.minValue) / state.stepSize);\r\n        state.maxValue = state.maxValue * state.stepSize + state.minValue;\r\n      }\r\n      if (state.maxValue === state.minValue) {\r\n        state.maxValue += state.stepSize;\r\n      }\r\n      return state;\r\n    case 'valueFrom':\r\n      const valueFrom = action.value as number;\r\n      if (valueFrom <= state.minValue) {\r\n        state.valueFrom = state.minValue;\r\n      } else if (state.isRange && valueFrom >= state.valueTo) {\r\n        state.valueFrom = state.valueTo;\r\n      } else if (valueFrom >= state.maxValue) {\r\n        state.valueFrom = state.maxValue;\r\n      } else {\r\n        state.valueFrom = Math.round((valueFrom - state.minValue) / state.stepSize);\r\n        state.valueFrom = state.valueFrom * state.stepSize + state.minValue;\r\n      }\r\n      return state;\r\n    case 'valueTo':\r\n      const valueTo = action.value as number;\r\n      if (state.isRange) {\r\n        if (valueTo > state.valueFrom && valueTo < state.maxValue) {\r\n          state.valueTo = Math.round((valueTo - state.valueFrom) / state.stepSize);\r\n          state.valueTo = state.valueTo * state.stepSize + state.valueFrom;\r\n        } else if (valueTo >= state.maxValue) {\r\n          state.valueTo = state.maxValue;\r\n        } else {\r\n          state.valueTo = state.valueFrom;\r\n        }\r\n      }\r\n      return state;\r\n    default:\r\n      return currentState;\r\n  }\r\n};\r\n\r\nexport {reducer as default, defaultState};\r\n","import {createStore} from '@reduxjs/toolkit';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport rangeSliderReducer, {defaultState} from './components/RangeSlider/reducer';\r\n\r\nconst rootState = {\r\n  rangeSlider: [\r\n    {\r\n      minValue: -80,\r\n      maxValue: 245,\r\n      valueFrom: 10,\r\n      valueTo: 90,\r\n      stepSize: 5,\r\n      isRange: true,\r\n      isTooltip: true,\r\n      isScale: true,\r\n      isVertical: false,\r\n    },\r\n    {...defaultState, valueFrom: 10, valueTo: 90, isVertical: true, maxValue: 100},\r\n    {...defaultState, isTooltip: true, isScale: true, isRange: true, maxValue: 10},\r\n    {...defaultState}\r\n  ],\r\n}\r\n\r\nconst rootReducer = (appState: TRootState = rootState, action: TRootAction) => {\r\n  const state = {...appState}\r\n  switch (action.type) {\r\n    case 'rangeSlider':\r\n      state.rangeSlider[action.id] = rangeSliderReducer(state.rangeSlider[action.id], action.value);\r\n      return state;\r\n    default:\r\n      return appState;\r\n  }\r\n}\r\n\r\nconst store = createStore(rootReducer, rootState);\r\n\r\nfunction mapRangeSliderSelector<T extends number | boolean>(id: number, props: TRangeSliderStateKeys[]) {\r\n  return props.map((item: TRangeSliderStateKeys) => {\r\n    return useSelector((store: TRootState) => store.rangeSlider[id][item]) as T;\r\n  });\r\n}\r\n\r\nconst useMapRangeSliderDispatch = (id: number, props: TRangeSliderStateKeys[]) => {\r\n  const dispatch = useDispatch();\r\n  return props.map((item: TRangeSliderStateKeys) => {\r\n    return (value: number | boolean) => dispatch({type: 'rangeSlider', id, value: {type: item, value}});\r\n  });\r\n}\r\n\r\nexport {store as default, mapRangeSliderSelector, useMapRangeSliderDispatch};\r\n","import React, {createContext, useContext, useRef, useState} from 'react';\r\nimport {mapRangeSliderSelector, useMapRangeSliderDispatch} from '../../store';\r\nimport stylesHor from './styles-hor.module.sass';\r\nimport stylesVer from './styles-ver.module.sass';\r\n\r\nconst Context = createContext(stylesHor);\r\n\r\nconst RangeSliderThumb = ({thumbFor}: { thumbFor: 'valueFrom' | 'valueTo' }) => {\r\n  const [styles, rangeSliderId] = useContext(Context);\r\n  const [minValue, maxValue, value] =\r\n    mapRangeSliderSelector<number>(rangeSliderId, ['minValue', 'maxValue', thumbFor]);\r\n  const [isVertical, isTooltip] = mapRangeSliderSelector<boolean>(rangeSliderId, ['isVertical', 'isTooltip']);\r\n  const [setValue] = useMapRangeSliderDispatch(rangeSliderId, [thumbFor]);\r\n\r\n  const posToPercent = (maxValue - minValue) / 100;\r\n  const position = (value - minValue) / posToPercent;\r\n  const posThumb = {\r\n    left: isVertical ? '0' : `${position}%`,\r\n    top: isVertical ? `${position}%` : '0',\r\n  }\r\n\r\n  const thumbRef = useRef<HTMLDivElement>(null);\r\n  const handleDocumentMouseup = () => {\r\n    document.removeEventListener('mousemove', handleDocumentMousemove);\r\n    document.removeEventListener('mouseup', handleDocumentMouseup);\r\n  }\r\n\r\n  const handleDocumentMousemove = (evt: MouseEvent) => {\r\n    const parent = thumbRef.current ? thumbRef.current.parentElement : null;\r\n    if (parent) {\r\n      const rect = parent.getBoundingClientRect();\r\n      const clientXorY = isVertical ? evt.clientY : evt.clientX;\r\n      const offsetXorY = isVertical ? rect.top : rect.left;\r\n      const widthOrHeight = isVertical ? rect.height : rect.width;\r\n      const percentToPos = (clientXorY - offsetXorY) / (widthOrHeight / 100);\r\n      const thumbValue = percentToPos * posToPercent + minValue;\r\n      setValue(thumbValue);\r\n    }\r\n  }\r\n\r\n  const handleThumbMousedown = (evt: React.MouseEvent) => {\r\n    evt.preventDefault();\r\n    document.addEventListener('mousemove', handleDocumentMousemove);\r\n    document.addEventListener('mouseup', handleDocumentMouseup);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onMouseDown={handleThumbMousedown}\r\n      style={posThumb}\r\n      ref={thumbRef}\r\n      className={styles.thumb}>\r\n      {isTooltip ? <div className={styles.thumb__tooltip}>{value}</div> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst RangeSliderRail = () => {\r\n  const [styles, rangeSliderId] = useContext(Context);\r\n  const [minValue, maxValue, valueFrom, valueTo] =\r\n    mapRangeSliderSelector<number>(rangeSliderId, ['minValue', 'maxValue', 'valueFrom', 'valueTo']);\r\n  const [isVertical, isRange] = mapRangeSliderSelector<boolean>(rangeSliderId, ['isVertical', 'isRange']);\r\n\r\n  const posToPercent = (maxValue - minValue) / 100;\r\n  const positionFrom = (valueFrom - minValue) / posToPercent;\r\n  const positionTo = (valueTo - minValue) / posToPercent;\r\n\r\n  const posProgress = {\r\n    left: isVertical ? '0' : `${positionFrom}%`,\r\n    right: isVertical || !isRange ? '0' : `${100 - positionTo}%`,\r\n    top: isVertical ? `${positionFrom}%` : '0',\r\n    bottom: isVertical && isRange ? `${100 - positionTo}%` : '0',\r\n  }\r\n\r\n  return (\r\n    <div className={styles.rail}>\r\n      <RangeSliderThumb thumbFor=\"valueFrom\"/>\r\n      {isRange ? <RangeSliderThumb thumbFor=\"valueTo\"/> : null}\r\n      <div\r\n        className={styles.progress}\r\n        style={posProgress}>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst RangeSliderScale = () => {\r\n  const [styles, rangeSliderId] = useContext(Context);\r\n  const [minValue, maxValue] = mapRangeSliderSelector<number>(rangeSliderId, ['minValue', 'maxValue']);\r\n  const [isVertical, isRange] = mapRangeSliderSelector<boolean>(rangeSliderId, ['isVertical', 'isRange']);\r\n  const [setValueFrom, setValueTo] = useMapRangeSliderDispatch(rangeSliderId, ['valueFrom', 'valueTo']);\r\n\r\n\r\n  const subdivision = <span className={styles.scale__subdivision}/>;\r\n  const division = <div className={styles.scale__division}>\r\n    {subdivision}\r\n    {subdivision}\r\n    {subdivision}\r\n    {subdivision}\r\n    {subdivision}\r\n  </div>\r\n\r\n  const [toggle, setToggle] = useState(true);\r\n  const posToPercent = (maxValue - minValue) / 100;\r\n  const handleScaleMousedown = (evt: React.MouseEvent) => {\r\n    const rect = evt.currentTarget.getBoundingClientRect();\r\n    let position: number;\r\n    if (isVertical) {\r\n      position = (evt.clientY - rect.top) / (rect.height / 100);\r\n    } else {\r\n      position = (evt.clientX - rect.left) / (rect.width / 100);\r\n    }\r\n    const value = position * posToPercent + minValue;\r\n    if (isRange) {\r\n      toggle ? setValueFrom(value) : setValueTo(value);\r\n      setToggle(!toggle);\r\n    } else {\r\n      setValueFrom(value);\r\n      setToggle(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={styles.scale}\r\n      onMouseDown={handleScaleMousedown}>\r\n      <div className={styles.scale__wrapper}>\r\n        {division}\r\n        {division}\r\n        {division}\r\n      </div>\r\n      <div className={styles.scale__values}>\r\n        <span className={styles.scale__valuesItem}>\r\n          {minValue}\r\n        </span>\r\n        <span className={styles.scale__valuesItem}>\r\n          {(minValue + ((maxValue - minValue) / 3)).toFixed()}\r\n        </span>\r\n        <span className={styles.scale__valuesItem}>\r\n          {(minValue + ((maxValue - minValue) / 3) * 2).toFixed()}\r\n        </span>\r\n        <span className={styles.scale__valuesItem}>\r\n          {maxValue}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RangeSlider = ({rangeSliderId}: TRangeSliderId) => {\r\n  const [isVertical, isScale] = mapRangeSliderSelector<boolean>(rangeSliderId, ['isVertical', 'isScale']);\r\n\r\n  const styles = isVertical ? stylesVer : stylesHor;\r\n\r\n  return (\r\n    <Context.Provider value={[styles, rangeSliderId]}>\r\n      <div className={styles.slider}>\r\n        <RangeSliderRail/>\r\n        {isScale ? <RangeSliderScale/> : null}\r\n      </div>\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport default RangeSlider;\r\n","import React, {useState, useEffect, useMemo} from 'react';\r\nimport {useMapRangeSliderDispatch, mapRangeSliderSelector} from '../../store';\r\nimport RangeSlider from '../RangeSlider/RangeSlider';\r\nimport './styles.sass';\r\n\r\nconst ControlPanel = ({rangeSliderId}: TRangeSliderId) => {\r\n  const [minValue, maxValue, valueFrom, valueTo, stepSize] =\r\n    mapRangeSliderSelector<number>(rangeSliderId, ['minValue','maxValue', 'valueFrom', 'valueTo', 'stepSize']);\r\n  const [isRange, isTooltip, isScale, isVertical] =\r\n    mapRangeSliderSelector<boolean>(rangeSliderId, ['isRange', 'isTooltip', 'isScale', 'isVertical']);\r\n  const [setMinValue, setMaxValue, setValueFrom, setValueTo, setStepSize, setIsRange, setIsTooltip, setIsScale, setIsVertical] =\r\n    useMapRangeSliderDispatch(\r\n      rangeSliderId,\r\n      ['minValue', 'maxValue', 'valueFrom', 'valueTo', 'stepSize', 'isRange', 'isTooltip', 'isScale', 'isVertical']\r\n    );\r\n\r\n  const [minValueState, setMinValueState] = useState(minValue);\r\n  const [maxValueState, setMaxValueState] = useState(maxValue);\r\n  const [valueFromState, setValueFromState] = useState(valueFrom);\r\n  const [valueToState, setValueToState] = useState(valueTo);\r\n  const [stepSizeState, setStepSizeState] = useState(stepSize);\r\n\r\n  useEffect(() => {\r\n    setMinValueState(minValue);\r\n    setMaxValueState(maxValue);\r\n    setValueFromState(valueFrom);\r\n    setValueToState(valueTo);\r\n    setStepSizeState(stepSize);\r\n  }, [minValue, maxValue, valueFrom, valueTo, stepSize]);\r\n\r\n  return (\r\n    <form className=\"control\">\r\n      <div className=\"control__slider\">\r\n        {useMemo(() => <RangeSlider rangeSliderId={rangeSliderId}/>, [rangeSliderId])}\r\n      </div>\r\n      <fieldset className=\"control__panel\">\r\n        <legend>\r\n          Control Panel\r\n        </legend>\r\n        <label className=\"control__panel-item\">\r\n          <input\r\n            className=\"control__min-value\"\r\n            type=\"number\"\r\n            value={minValueState}\r\n            onChange={evt => {\r\n              setMinValueState(Number(evt.target.value));\r\n            }}\r\n            onBlur={() => {\r\n              setMinValue(minValueState);\r\n              setMinValueState(minValue);\r\n            }}\r\n          />\r\n          Min value\r\n        </label>\r\n        <label className=\"control__panel-item\">\r\n          <input\r\n            className=\"control__max-value\"\r\n            type=\"number\"\r\n            value={maxValueState}\r\n            onChange={evt => setMaxValueState(Number(evt.target.value))}\r\n            onBlur={() => {\r\n              setMaxValue(maxValueState);\r\n              setMaxValueState(maxValue);\r\n            }}\r\n          />\r\n          Max value\r\n        </label>\r\n        <label className=\"control__panel-item\">\r\n          <input\r\n            className=\"control__value-from\"\r\n            type=\"number\"\r\n            value={valueFromState}\r\n            onChange={evt => setValueFromState(Number(evt.target.value))}\r\n            onBlur={() => {\r\n              setValueFrom(valueFromState);\r\n              setValueFromState(valueFrom);\r\n            }}\r\n          />\r\n          Value from\r\n        </label>\r\n        <label className=\"control__panel-item\">\r\n          <input\r\n            className=\"control__value-to\"\r\n            type=\"number\"\r\n            value={valueToState}\r\n            onChange={evt => setValueToState(Number(evt.target.value))}\r\n            onBlur={() => {\r\n              setValueTo(valueToState);\r\n              setValueToState(valueTo);\r\n            }}\r\n          />\r\n          Value to\r\n        </label>\r\n        <label className=\"control__panel-item\">\r\n          <input\r\n            className=\"control__step-size\"\r\n            type=\"number\"\r\n            value={stepSizeState}\r\n            onChange={evt => setStepSizeState(Number(evt.target.value))}\r\n            onBlur={() => {\r\n              setStepSize(stepSizeState);\r\n              setStepSizeState(stepSize);\r\n            }}\r\n          />\r\n          Step size\r\n        </label>\r\n        <label className=\"control__panel-item\">\r\n          <input\r\n            className=\"control__is-vertical\"\r\n            type=\"checkbox\"\r\n            checked={isVertical}\r\n            onChange={evt => setIsVertical(Boolean(evt.target.checked))}\r\n          />\r\n          Is vertical\r\n        </label>\r\n        <label className=\"control__panel-item\">\r\n          <input\r\n            className=\"control__is-range\"\r\n            type=\"checkbox\"\r\n            checked={isRange}\r\n            onChange={evt => setIsRange(Boolean(evt.target.checked))}\r\n          />\r\n          Is range\r\n        </label>\r\n        <label className=\"control__panel-item\">\r\n          <input\r\n            className=\"control__is-tooltip\"\r\n            type=\"checkbox\"\r\n            checked={isTooltip}\r\n            onChange={evt => setIsTooltip(Boolean(evt.target.checked))}\r\n          />\r\n          Is tooltip\r\n        </label>\r\n        <label className=\"control__panel-item\">\r\n          <input\r\n            className=\"control__is-scale\"\r\n            type=\"checkbox\"\r\n            checked={isScale}\r\n            onChange={evt => setIsScale(Boolean(evt.target.checked))}\r\n          />\r\n          Is scale\r\n        </label>\r\n        <label className=\"control__panel-item\">\r\n          <span className=\"control__range\">\r\n            {isRange ? valueToState - valueFromState : valueFromState}\r\n          </span>\r\n          Range\r\n        </label>\r\n      </fieldset>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ControlPanel;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport ControlPanel from './components/ControlPanel/ControlPanel';\r\nimport './index.sass';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ControlPanel rangeSliderId={0}/>\r\n      <ControlPanel rangeSliderId={1}/>\r\n      <ControlPanel rangeSliderId={2}/>\r\n      <ControlPanel rangeSliderId={3}/>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.querySelector('.app-main')\r\n);"],"sourceRoot":""}