{"version":3,"sources":["range-slider/range-slider-hor.module.sass","range-slider/range-slider-ver.module.sass","range-slider/range-slider-reducer.ts","index-store.ts","range-slider/range-slider.tsx","control-panel/control-panel.tsx","index.tsx"],"names":["module","exports","defaultState","minValue","maxValue","valueFrom","valueTo","stepSize","isRange","isTooltip","isScale","isVertical","rangeSliderReducer","currentState","action","state","type","value","step","Math","round","maxStep","abs","rootState","rangeSlider","store","createStore","appState","id","mapRangeSliderSelector","props","map","item","useSelector","useMapRangeSliderDispatch","dispatch","useDispatch","Context","createContext","stylesHor","RangeSliderThumb","thumbFor","useContext","styles","rangeSliderId","setValue","posToPercent","position","posThumb","left","top","thumbRef","useRef","handleDocumentMouseup","document","removeEventListener","handleDocumentMousemove","evt","parent","current","parentElement","rect","getBoundingClientRect","clientXorY","clientY","clientX","offsetXorY","widthOrHeight","height","width","onMouseDown","preventDefault","addEventListener","style","ref","className","thumb","thumb__tooltip","RangeSliderRail","positionFrom","positionTo","posProgress","right","bottom","rail","progress","RangeSliderScale","setValueFrom","setValueTo","subdivision","scale__subdivision","division","scale__division","useState","toggle","setToggle","scale","currentTarget","scale__wrapper","scale__values","scale__valuesItem","toFixed","RangeSlider","stylesVer","Provider","slider","ControlPanel","setMinValue","setMaxValue","setStepSize","setIsRange","setIsTooltip","setIsScale","setIsVertical","minValueState","setMinValueState","maxValueState","setMaxValueState","valueFromState","setValueFromState","valueToState","setValueToState","stepSizeState","setStepSizeState","useEffect","useMemo","onChange","Number","target","onBlur","checked","Boolean","ReactDOM","render","StrictMode","querySelector"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,OAAS,iCAAiC,KAAO,+BAA+B,MAAQ,gCAAgC,eAAiB,yCAAyC,SAAW,mCAAmC,MAAQ,gCAAgC,eAAiB,yCAAyC,gBAAkB,0CAA0C,mBAAqB,6CAA6C,cAAgB,wCAAwC,kBAAoB,8C,mBCA9hBD,EAAOC,QAAU,CAAC,OAAS,iCAAiC,KAAO,+BAA+B,MAAQ,gCAAgC,eAAiB,yCAAyC,SAAW,mCAAmC,MAAQ,gCAAgC,eAAiB,yCAAyC,gBAAkB,0CAA0C,mBAAqB,6CAA6C,cAAgB,wCAAwC,kBAAoB,8C,kJCDxhBC,EAAe,CACnBC,SAAU,EACVC,SAAU,EACVC,UAAW,EACXC,QAAS,EACTC,SAAU,EACVC,SAAS,EACTC,WAAW,EACXC,SAAS,EACTC,YAAY,GAGRC,EAAqB,WAAiF,IAAhFC,EAA+E,uDAA7CX,EAAcY,EAA+B,uCACnGC,EAAK,eAAOF,GAClB,OAAQC,EAAOE,MACb,IAAK,UAKH,OAJAD,EAAMP,QAAUM,EAAOG,MACnBH,EAAOG,OAASF,EAAMT,QAAUS,EAAMV,YACxCU,EAAMT,QAAUS,EAAMV,WAEjBU,EACT,IAAK,YAEH,OADAA,EAAMN,UAAYK,EAAOG,MAClBF,EACT,IAAK,UAEH,OADAA,EAAML,QAAUI,EAAOG,MAChBF,EACT,IAAK,aAEH,OADAA,EAAMJ,WAAaG,EAAOG,MACnBF,EACT,IAAK,WACH,IAAMZ,EAAWW,EAAOG,MACxB,GAAId,EAAWY,EAAMV,UAAW,CAC9B,IAAMa,EAAOC,KAAKC,OAAOL,EAAMV,UAAYF,GAAYY,EAAMR,UAAYQ,EAAMR,SAC/EQ,EAAMZ,SAAWY,EAAMV,UAAYa,OAEnCH,EAAMZ,SAAWY,EAAMV,UAKzB,OAHIU,EAAMZ,WAAaY,EAAMX,WAC3BW,EAAMZ,UAAYY,EAAMR,UAEnBQ,EACT,IAAK,WACH,IAAIR,EAAWO,EAAOG,MAChBI,EAAUF,KAAKG,IAAIP,EAAMX,SAAWW,EAAMZ,UAEhD,GAAIkB,GADJd,EAAWY,KAAKG,IAAIH,KAAKC,MAAMb,OACJ,EACzB,KAAOc,EAAUd,IAAa,GAE5B,IADAA,GAAY,IACI,EAEd,OADAQ,EAAMR,SAAW,EACVQ,EA4Bb,OAtBEA,EAAMR,SADJA,EAAWc,GAAWd,EAAW,EAClBY,KAAKC,MAAMb,GACnBA,GAAYc,EACJA,EAEA,EAGfN,EAAMV,UAAYU,EAAMZ,UAC1BY,EAAMV,UAAYc,KAAKC,OAAOL,EAAMV,UAAYU,EAAMZ,UAAYY,EAAMR,UACxEQ,EAAMV,UAAYU,EAAMV,UAAYU,EAAMR,SAAWQ,EAAMZ,UAE3DY,EAAMV,UAAYU,EAAMZ,SAGtBY,EAAMP,UACJO,EAAMT,QAAUS,EAAMV,WACxBU,EAAMT,QAAUa,KAAKC,OAAOL,EAAMT,QAAUS,EAAMZ,UAAYY,EAAMR,UACpEQ,EAAMT,QAAUS,EAAMT,QAAUS,EAAMR,SAAWQ,EAAMZ,UAEvDY,EAAMT,QAAUS,EAAMV,WAGnBU,EACT,IAAK,WACH,IAAMX,EAAWU,EAAOG,MAYxB,OAXIF,EAAMP,SAAWJ,GAAYW,EAAMT,QACrCS,EAAMX,SAAWW,EAAMT,QACdF,GAAYW,EAAMV,UAC3BU,EAAMX,SAAWW,EAAMV,WAEvBU,EAAMX,SAAWe,KAAKC,OAAOhB,EAAWW,EAAMZ,UAAYY,EAAMR,UAChEQ,EAAMX,SAAWW,EAAMX,SAAWW,EAAMR,SAAWQ,EAAMZ,UAEvDY,EAAMX,WAAaW,EAAMZ,WAC3BY,EAAMX,UAAYW,EAAMR,UAEnBQ,EACT,IAAK,YACH,IAAMV,EAAYS,EAAOG,MAWzB,OAVIZ,GAAaU,EAAMZ,SACrBY,EAAMV,UAAYU,EAAMZ,SACfY,EAAMP,SAAWH,GAAaU,EAAMT,QAC7CS,EAAMV,UAAYU,EAAMT,QACfD,GAAaU,EAAMX,SAC5BW,EAAMV,UAAYU,EAAMX,UAExBW,EAAMV,UAAYc,KAAKC,OAAOf,EAAYU,EAAMZ,UAAYY,EAAMR,UAClEQ,EAAMV,UAAYU,EAAMV,UAAYU,EAAMR,SAAWQ,EAAMZ,UAEtDY,EACT,IAAK,UACH,IAAMT,EAAUQ,EAAOG,MAWvB,OAVIF,EAAMP,UACJF,EAAUS,EAAMV,WAAaC,EAAUS,EAAMX,UAC/CW,EAAMT,QAAUa,KAAKC,OAAOd,EAAUS,EAAMV,WAAaU,EAAMR,UAC/DQ,EAAMT,QAAUS,EAAMT,QAAUS,EAAMR,SAAWQ,EAAMV,WAC9CC,GAAWS,EAAMX,SAC1BW,EAAMT,QAAUS,EAAMX,SAEtBW,EAAMT,QAAUS,EAAMV,WAGnBU,EACT,QACE,OAAOF,ICrHPU,EAAY,CAChBC,YAAa,CACX,CACErB,UAAW,GACXC,SAAU,IACVC,UAAW,GACXC,QAAS,GACTC,SAAU,EACVC,SAAS,EACTC,WAAW,EACXC,SAAS,EACTC,YAAY,GAVH,2BAYPT,GAZO,IAYOG,UAAW,GAAIC,QAAS,GAAIK,YAAY,EAAMP,SAAU,MAZ/D,2BAaPF,GAbO,IAaOO,WAAW,EAAMC,SAAS,EAAMF,SAAS,EAAMJ,SAAU,KAbhE,eAcPF,KAeFuB,EAAQC,aAXM,WAA4D,IAA3DC,EAA0D,uDAAnCJ,EAAWT,EAAwB,uCACvEC,EAAK,eAAOY,GAClB,OAAQb,EAAOE,MACb,IAAK,cAEH,OADAD,EAAMS,YAAYV,EAAOc,IAAMhB,EAAmBG,EAAMS,YAAYV,EAAOc,IAAKd,EAAOG,OAChFF,EACT,QACE,OAAOY,KAI0BJ,GAEvC,SAASM,EAAmDD,EAAYE,GACtE,OAAOA,EAAMC,KAAI,SAACC,GAChB,OAAOC,aAAY,SAACR,GAAD,OAAuBA,EAAMD,YAAYI,GAAII,SAIpE,IAAME,EAA4B,SAACN,EAAYE,GAC7C,IAAMK,EAAWC,cACjB,OAAON,EAAMC,KAAI,SAACC,GAChB,OAAO,SAACf,GAAD,OAA6BkB,EAAS,CAACnB,KAAM,cAAeY,KAAIX,MAAO,CAACD,KAAMgB,EAAMf,gB,yCCxCzFoB,EAAUC,wBAAcC,KAExBC,EAAmB,SAAC,GAAuD,IAAtDC,EAAqD,EAArDA,SAAqD,EAC9CC,qBAAWL,GADmC,mBACvEM,EADuE,KAC/DC,EAD+D,OAG5Ef,EAA+Be,EAAe,CAAC,WAAY,WAAYH,IAHK,mBAEvEtC,EAFuE,KAE7DC,EAF6D,KAEnDa,EAFmD,OAI9CY,EAAgCe,EAAe,CAAC,aAAc,cAJhB,mBAIvEjC,EAJuE,KAI3DF,EAJ2D,OAK3DyB,EAA0BU,EAAe,CAACH,IAAtDI,EALuE,oBAOxEC,GAAgB1C,EAAWD,GAAY,IACvC4C,GAAY9B,EAAQd,GAAY2C,EAChCE,EAAW,CACfC,KAAMtC,EAAa,IAAH,UAAYoC,EAAZ,KAChBG,IAAKvC,EAAU,UAAMoC,EAAN,KAAoB,KAG/BI,EAAWC,iBAAuB,MAClCC,EAAwB,SAAxBA,IACJC,SAASC,oBAAoB,YAAaC,GAC1CF,SAASC,oBAAoB,UAAWF,IAGpCG,EAA0B,SAACC,GAC/B,IAAMC,EAASP,EAASQ,QAAUR,EAASQ,QAAQC,cAAgB,KACnE,GAAIF,EAAQ,CACV,IAAMG,EAAOH,EAAOI,wBACdC,EAAapD,EAAa8C,EAAIO,QAAUP,EAAIQ,QAC5CC,EAAavD,EAAakD,EAAKX,IAAMW,EAAKZ,KAC1CkB,EAAgBxD,EAAakD,EAAKO,OAASP,EAAKQ,MAGtDxB,GAFsBkB,EAAaG,IAAeC,EAAgB,KAChCrB,EAAe3C,KAWrD,OACE,qBACEmE,YARyB,SAACb,GAC5BA,EAAIc,iBACJjB,SAASkB,iBAAiB,YAAahB,GACvCF,SAASkB,iBAAiB,UAAWnB,IAMnCoB,MAAOzB,EACP0B,IAAKvB,EACLwB,UAAWhC,EAAOiC,MAJpB,SAKGnE,EAAY,qBAAKkE,UAAWhC,EAAOkC,eAAvB,SAAwC5D,IAAe,QAKpE6D,EAAkB,WAAO,IAAD,EACIpC,qBAAWL,GADf,mBACrBM,EADqB,KACbC,EADa,OAG1Bf,EAA+Be,EAAe,CAAC,WAAY,WAAY,YAAa,YAH1D,mBAErBzC,EAFqB,KAEXC,EAFW,KAEDC,EAFC,KAEUC,EAFV,OAIEuB,EAAgCe,EAAe,CAAC,aAAc,YAJhE,mBAIrBjC,EAJqB,KAITH,EAJS,KAMtBsC,GAAgB1C,EAAWD,GAAY,IACvC4E,GAAgB1E,EAAYF,GAAY2C,EACxCkC,GAAc1E,EAAUH,GAAY2C,EAEpCmC,EAAc,CAClBhC,KAAMtC,EAAa,IAAH,UAAYoE,EAAZ,KAChBG,MAAOvE,IAAeH,EAAU,IAAzB,UAAkC,IAAMwE,EAAxC,KACP9B,IAAKvC,EAAU,UAAMoE,EAAN,KAAwB,IACvCI,OAAQxE,GAAcH,EAAd,UAA2B,IAAMwE,EAAjC,KAAiD,KAG3D,OACE,sBAAKL,UAAWhC,EAAOyC,KAAvB,UACE,cAAC,EAAD,CAAkB3C,SAAS,cAC1BjC,EAAU,cAAC,EAAD,CAAkBiC,SAAS,YAAc,KACpD,qBACEkC,UAAWhC,EAAO0C,SAClBZ,MAAOQ,QAMTK,EAAmB,WAAO,IAAD,EACG5C,qBAAWL,GADd,mBACtBM,EADsB,KACdC,EADc,OAEAf,EAA+Be,EAAe,CAAC,WAAY,aAF3D,mBAEtBzC,EAFsB,KAEZC,EAFY,OAGCyB,EAAgCe,EAAe,CAAC,aAAc,YAH/D,mBAGtBjC,EAHsB,KAGVH,EAHU,OAIM0B,EAA0BU,EAAe,CAAC,YAAa,YAJ7D,mBAItB2C,EAJsB,KAIRC,EAJQ,KAOvBC,EAAc,sBAAMd,UAAWhC,EAAO+C,qBACtCC,EAAW,sBAAKhB,UAAWhC,EAAOiD,gBAAvB,UACdH,EACAA,EACAA,EACAA,EACAA,KAb0B,EAgBDI,oBAAS,GAhBR,mBAgBtBC,EAhBsB,KAgBdC,EAhBc,KAiBvBjD,GAAgB1C,EAAWD,GAAY,IAmB7C,OACE,sBACEwE,UAAWhC,EAAOqD,MAClB1B,YArByB,SAACb,GAC5B,IAAMI,EAAOJ,EAAIwC,cAAcnC,wBAOzB7C,GALFN,GACU8C,EAAIO,QAAUH,EAAKX,MAAQW,EAAKO,OAAS,MAEzCX,EAAIQ,QAAUJ,EAAKZ,OAASY,EAAKQ,MAAQ,MAE9BvB,EAAe3C,EACpCK,GACFsF,EAASP,EAAatE,GAASuE,EAAWvE,GAC1C8E,GAAWD,KAEXP,EAAatE,GACb8E,GAAU,KAKZ,UAGE,sBAAKpB,UAAWhC,EAAOuD,eAAvB,UACGP,EACAA,EACAA,KAEH,sBAAKhB,UAAWhC,EAAOwD,cAAvB,UACE,sBAAMxB,UAAWhC,EAAOyD,kBAAxB,SACGjG,IAEH,sBAAMwE,UAAWhC,EAAOyD,kBAAxB,UACIjG,GAAaC,EAAWD,GAAY,GAAIkG,YAE5C,sBAAM1B,UAAWhC,EAAOyD,kBAAxB,UACIjG,GAAaC,EAAWD,GAAY,EAAK,GAAGkG,YAEhD,sBAAM1B,UAAWhC,EAAOyD,kBAAxB,SACGhG,WAsBIkG,EAfK,SAAC,GAAqC,IAApC1D,EAAmC,EAAnCA,cAAmC,EACzBf,EAAgCe,EAAe,CAAC,aAAc,YADrC,mBAChDjC,EADgD,KACpCD,EADoC,KAGjDiC,EAAShC,EAAa4F,IAAYhE,IAExC,OACE,cAACF,EAAQmE,SAAT,CAAkBvF,MAAO,CAAC0B,EAAQC,GAAlC,SACE,sBAAK+B,UAAWhC,EAAO8D,OAAvB,UACE,cAAC,EAAD,IACC/F,EAAU,cAAC,EAAD,IAAsB,WCL1BgG,G,MApJM,SAAC,GAAqC,IAApC9D,EAAmC,EAAnCA,cAAmC,EAEtDf,EAA+Be,EAAe,CAAC,WAAW,WAAY,YAAa,YAAa,aAF1C,mBACjDzC,EADiD,KACvCC,EADuC,KAC7BC,EAD6B,KAClBC,EADkB,KACTC,EADS,OAItDsB,EAAgCe,EAAe,CAAC,UAAW,YAAa,UAAW,eAJ7B,mBAGjDpC,EAHiD,KAGxCC,EAHwC,KAG7BC,EAH6B,KAGpBC,EAHoB,OAMtDuB,EACEU,EACA,CAAC,WAAY,WAAY,YAAa,UAAW,WAAY,UAAW,YAAa,UAAW,eAR5C,mBAKjD+D,EALiD,KAKpCC,EALoC,KAKvBrB,EALuB,KAKTC,EALS,KAKGqB,EALH,KAKgBC,EALhB,KAK4BC,EAL5B,KAK0CC,EAL1C,KAKsDC,EALtD,OAWdpB,mBAAS1F,GAXK,mBAWjD+G,EAXiD,KAWlCC,EAXkC,OAYdtB,mBAASzF,GAZK,mBAYjDgH,EAZiD,KAYlCC,EAZkC,OAaZxB,mBAASxF,GAbG,mBAajDiH,EAbiD,KAajCC,EAbiC,OAchB1B,mBAASvF,GAdO,mBAcjDkH,EAdiD,KAcnCC,EAdmC,OAed5B,mBAAStF,GAfK,mBAejDmH,EAfiD,KAelCC,EAfkC,KAyBxD,OARAC,qBAAU,WACRT,EAAiBhH,GACjBkH,EAAiBjH,GACjBmH,EAAkBlH,GAClBoH,EAAgBnH,GAChBqH,EAAiBpH,KAChB,CAACJ,EAAUC,EAAUC,EAAWC,EAASC,IAG1C,uBAAMoE,UAAU,UAAhB,UACE,qBAAKA,UAAU,kBAAf,SACGkD,mBAAQ,kBAAM,cAAC,EAAD,CAAajF,cAAeA,MAAkB,CAACA,MAEhE,2BAAU+B,UAAU,iBAApB,UACE,mDAGA,wBAAOA,UAAU,sBAAjB,UACE,uBACEA,UAAU,qBACV3D,KAAK,SACLC,MAAOiG,EACPY,SAAU,SAAArE,GACR0D,EAAiBY,OAAOtE,EAAIuE,OAAO/G,SAErCgH,OAAQ,WACNtB,EAAYO,GACZC,EAAiBhH,MAVvB,eAeA,wBAAOwE,UAAU,sBAAjB,UACE,uBACEA,UAAU,qBACV3D,KAAK,SACLC,MAAOmG,EACPU,SAAU,SAAArE,GAAG,OAAI4D,EAAiBU,OAAOtE,EAAIuE,OAAO/G,SACpDgH,OAAQ,WACNrB,EAAYQ,GACZC,EAAiBjH,MARvB,eAaA,wBAAOuE,UAAU,sBAAjB,UACE,uBACEA,UAAU,sBACV3D,KAAK,SACLC,MAAOqG,EACPQ,SAAU,SAAArE,GAAG,OAAI8D,EAAkBQ,OAAOtE,EAAIuE,OAAO/G,SACrDgH,OAAQ,WACN1C,EAAa+B,GACbC,EAAkBlH,MARxB,gBAaA,wBAAOsE,UAAU,sBAAjB,UACE,uBACEA,UAAU,oBACV3D,KAAK,SACLC,MAAOuG,EACPM,SAAU,SAAArE,GAAG,OAAIgE,EAAgBM,OAAOtE,EAAIuE,OAAO/G,SACnDgH,OAAQ,WACNzC,EAAWgC,GACXC,EAAgBnH,MARtB,cAaA,wBAAOqE,UAAU,sBAAjB,UACE,uBACEA,UAAU,qBACV3D,KAAK,SACLC,MAAOyG,EACPI,SAAU,SAAArE,GAAG,OAAIkE,EAAiBI,OAAOtE,EAAIuE,OAAO/G,SACpDgH,OAAQ,WACNpB,EAAYa,GACZC,EAAiBpH,MARvB,eAaA,wBAAOoE,UAAU,sBAAjB,UACE,uBACEA,UAAU,uBACV3D,KAAK,WACLkH,QAASvH,EACTmH,SAAU,SAAArE,GAAG,OAAIwD,EAAckB,QAAQ1E,EAAIuE,OAAOE,aALtD,iBASA,wBAAOvD,UAAU,sBAAjB,UACE,uBACEA,UAAU,oBACV3D,KAAK,WACLkH,QAAS1H,EACTsH,SAAU,SAAArE,GAAG,OAAIqD,EAAWqB,QAAQ1E,EAAIuE,OAAOE,aALnD,cASA,wBAAOvD,UAAU,sBAAjB,UACE,uBACEA,UAAU,sBACV3D,KAAK,WACLkH,QAASzH,EACTqH,SAAU,SAAArE,GAAG,OAAIsD,EAAaoB,QAAQ1E,EAAIuE,OAAOE,aALrD,gBASA,wBAAOvD,UAAU,sBAAjB,UACE,uBACEA,UAAU,oBACV3D,KAAK,WACLkH,QAASxH,EACToH,SAAU,SAAArE,GAAG,OAAIuD,EAAWmB,QAAQ1E,EAAIuE,OAAOE,aALnD,cASA,wBAAOvD,UAAU,sBAAjB,UACE,sBAAMA,UAAU,iBAAhB,SACGnE,EAAUgH,EAAeF,EAAiBA,IAF/C,mB,MCvIRc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,IAAD,CAAU7G,MAAOA,EAAjB,UACE,cAAC,EAAD,CAAcmB,cAAe,IAC7B,cAAC,EAAD,CAAcA,cAAe,IAC7B,cAAC,EAAD,CAAcA,cAAe,IAC7B,cAAC,EAAD,CAAcA,cAAe,SAGjCU,SAASiF,cAAc,gB","file":"static/js/main.7b1fdfb9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"slider\":\"range-slider-hor_slider__3NWM4\",\"rail\":\"range-slider-hor_rail__1Q9_F\",\"thumb\":\"range-slider-hor_thumb__1XY2Z\",\"thumb__tooltip\":\"range-slider-hor_thumb__tooltip__2Sef1\",\"progress\":\"range-slider-hor_progress__1QWOq\",\"scale\":\"range-slider-hor_scale__2xOj4\",\"scale__wrapper\":\"range-slider-hor_scale__wrapper__1v1G_\",\"scale__division\":\"range-slider-hor_scale__division__10aVd\",\"scale__subdivision\":\"range-slider-hor_scale__subdivision__B6T16\",\"scale__values\":\"range-slider-hor_scale__values__Knbwy\",\"scale__valuesItem\":\"range-slider-hor_scale__valuesItem__2rhSO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slider\":\"range-slider-ver_slider__emZIC\",\"rail\":\"range-slider-ver_rail__1TERw\",\"thumb\":\"range-slider-ver_thumb__2dJmt\",\"thumb__tooltip\":\"range-slider-ver_thumb__tooltip__3ek4C\",\"progress\":\"range-slider-ver_progress__2NjCx\",\"scale\":\"range-slider-ver_scale__3Q4zY\",\"scale__wrapper\":\"range-slider-ver_scale__wrapper__2efjM\",\"scale__division\":\"range-slider-ver_scale__division__1iGJM\",\"scale__subdivision\":\"range-slider-ver_scale__subdivision__2V7Gd\",\"scale__values\":\"range-slider-ver_scale__values__1QavI\",\"scale__valuesItem\":\"range-slider-ver_scale__valuesItem__26VJB\"};","const defaultState = {\n  minValue: 0,\n  maxValue: 1,\n  valueFrom: 0,\n  valueTo: 1,\n  stepSize: 1,\n  isRange: false,\n  isTooltip: false,\n  isScale: false,\n  isVertical: false,\n}\n\nconst rangeSliderReducer = (currentState: TRangeSliderState = defaultState, action: TRangeSliderAction) => {\n  const state = {...currentState};\n  switch (action.type) {\n    case 'isRange':\n      state.isRange = action.value as boolean;\n      if (action.value && state.valueTo < state.valueFrom) {\n        state.valueTo = state.valueFrom;\n      }\n      return state;\n    case 'isTooltip':\n      state.isTooltip = action.value as boolean;\n      return state;\n    case 'isScale':\n      state.isScale = action.value as boolean;\n      return state;\n    case 'isVertical':\n      state.isVertical = action.value as boolean;\n      return state;\n    case 'minValue':\n      const minValue = action.value as number;\n      if (minValue < state.valueFrom) {\n        const step = Math.round((state.valueFrom - minValue) / state.stepSize) * state.stepSize;\n        state.minValue = state.valueFrom - step;\n      } else {\n        state.minValue = state.valueFrom;\n      }\n      if (state.minValue === state.maxValue) {\n        state.minValue -= state.stepSize;\n      }\n      return state;\n    case 'stepSize':\n      let stepSize = action.value as number;\n      const maxStep = Math.abs(state.maxValue - state.minValue);\n      stepSize = Math.abs(Math.round(stepSize));\n      if (maxStep % stepSize !== 0) {\n        while (maxStep % stepSize !== 0) {\n          stepSize -= 1;\n          if (stepSize <= 0) {\n            state.stepSize = 1;\n            return state;\n          }\n        }\n      }\n\n      if (stepSize < maxStep && stepSize > 0) {\n        state.stepSize = Math.round(stepSize);\n      } else if (stepSize >= maxStep) {\n        state.stepSize = maxStep;\n      } else {\n        state.stepSize = 1;\n      }\n\n      if (state.valueFrom > state.minValue) {\n        state.valueFrom = Math.round((state.valueFrom - state.minValue) / state.stepSize);\n        state.valueFrom = state.valueFrom * state.stepSize + state.minValue;\n      } else {\n        state.valueFrom = state.minValue;\n      }\n\n      if (state.isRange) {\n        if (state.valueTo > state.valueFrom) {\n          state.valueTo = Math.round((state.valueTo - state.minValue) / state.stepSize);\n          state.valueTo = state.valueTo * state.stepSize + state.minValue;\n        } else {\n          state.valueTo = state.valueFrom;\n        }\n      }\n      return state;\n    case 'maxValue':\n      const maxValue = action.value as number;\n      if (state.isRange && maxValue <= state.valueTo) {\n        state.maxValue = state.valueTo;\n      } else if (maxValue <= state.valueFrom) {\n        state.maxValue = state.valueFrom;\n      } else {\n        state.maxValue = Math.round((maxValue - state.minValue) / state.stepSize);\n        state.maxValue = state.maxValue * state.stepSize + state.minValue;\n      }\n      if (state.maxValue === state.minValue) {\n        state.maxValue += state.stepSize;\n      }\n      return state;\n    case 'valueFrom':\n      const valueFrom = action.value as number;\n      if (valueFrom <= state.minValue) {\n        state.valueFrom = state.minValue;\n      } else if (state.isRange && valueFrom >= state.valueTo) {\n        state.valueFrom = state.valueTo;\n      } else if (valueFrom >= state.maxValue) {\n        state.valueFrom = state.maxValue;\n      } else {\n        state.valueFrom = Math.round((valueFrom - state.minValue) / state.stepSize);\n        state.valueFrom = state.valueFrom * state.stepSize + state.minValue;\n      }\n      return state;\n    case 'valueTo':\n      const valueTo = action.value as number;\n      if (state.isRange) {\n        if (valueTo > state.valueFrom && valueTo < state.maxValue) {\n          state.valueTo = Math.round((valueTo - state.valueFrom) / state.stepSize);\n          state.valueTo = state.valueTo * state.stepSize + state.valueFrom;\n        } else if (valueTo >= state.maxValue) {\n          state.valueTo = state.maxValue;\n        } else {\n          state.valueTo = state.valueFrom;\n        }\n      }\n      return state;\n    default:\n      return currentState;\n  }\n};\n\nexport {rangeSliderReducer as default, defaultState};\n","import {createStore} from '@reduxjs/toolkit';\nimport {useDispatch, useSelector} from 'react-redux';\nimport rangeSliderReducer, {defaultState} from './range-slider/range-slider-reducer';\n\nconst rootState = {\n  rangeSlider: [\n    {\n      minValue: -80,\n      maxValue: 245,\n      valueFrom: 10,\n      valueTo: 90,\n      stepSize: 5,\n      isRange: true,\n      isTooltip: true,\n      isScale: true,\n      isVertical: false,\n    },\n    {...defaultState, valueFrom: 10, valueTo: 90, isVertical: true, maxValue: 100},\n    {...defaultState, isTooltip: true, isScale: true, isRange: true, maxValue: 10},\n    {...defaultState}\n  ],\n}\n\nconst rootReducer = (appState: TRootState = rootState, action: TRootAction) => {\n  const state = {...appState}\n  switch (action.type) {\n    case 'rangeSlider':\n      state.rangeSlider[action.id] = rangeSliderReducer(state.rangeSlider[action.id], action.value);\n      return state;\n    default:\n      return appState;\n  }\n}\n\nconst store = createStore(rootReducer, rootState);\n\nfunction mapRangeSliderSelector<T extends number | boolean>(id: number, props: TRangeSliderStateKeys[]) {\n  return props.map((item: TRangeSliderStateKeys) => {\n    return useSelector((store: TRootState) => store.rangeSlider[id][item]) as T;\n  });\n}\n\nconst useMapRangeSliderDispatch = (id: number, props: TRangeSliderStateKeys[]) => {\n  const dispatch = useDispatch();\n  return props.map((item: TRangeSliderStateKeys) => {\n    return (value: number | boolean) => dispatch({type: 'rangeSlider', id, value: {type: item, value}});\n  });\n}\n\nexport {store as default, mapRangeSliderSelector, useMapRangeSliderDispatch};\n","import React, {createContext, useContext, useRef, useState} from 'react';\nimport {mapRangeSliderSelector, useMapRangeSliderDispatch} from '../index-store';\nimport stylesHor from './range-slider-hor.module.sass';\nimport stylesVer from './range-slider-ver.module.sass';\n\nconst Context = createContext(stylesHor);\n\nconst RangeSliderThumb = ({thumbFor}: { thumbFor: 'valueFrom' | 'valueTo' }) => {\n  const [styles, rangeSliderId] = useContext(Context);\n  const [minValue, maxValue, value] =\n    mapRangeSliderSelector<number>(rangeSliderId, ['minValue', 'maxValue', thumbFor]);\n  const [isVertical, isTooltip] = mapRangeSliderSelector<boolean>(rangeSliderId, ['isVertical', 'isTooltip']);\n  const [setValue] = useMapRangeSliderDispatch(rangeSliderId, [thumbFor]);\n\n  const posToPercent = (maxValue - minValue) / 100;\n  const position = (value - minValue) / posToPercent;\n  const posThumb = {\n    left: isVertical ? '0' : `${position}%`,\n    top: isVertical ? `${position}%` : '0',\n  }\n\n  const thumbRef = useRef<HTMLDivElement>(null);\n  const handleDocumentMouseup = () => {\n    document.removeEventListener('mousemove', handleDocumentMousemove);\n    document.removeEventListener('mouseup', handleDocumentMouseup);\n  }\n\n  const handleDocumentMousemove = (evt: MouseEvent) => {\n    const parent = thumbRef.current ? thumbRef.current.parentElement : null;\n    if (parent) {\n      const rect = parent.getBoundingClientRect();\n      const clientXorY = isVertical ? evt.clientY : evt.clientX;\n      const offsetXorY = isVertical ? rect.top : rect.left;\n      const widthOrHeight = isVertical ? rect.height : rect.width;\n      const percentToPos = (clientXorY - offsetXorY) / (widthOrHeight / 100);\n      const thumbValue = percentToPos * posToPercent + minValue;\n      setValue(thumbValue);\n    }\n  }\n\n  const handleThumbMousedown = (evt: React.MouseEvent) => {\n    evt.preventDefault();\n    document.addEventListener('mousemove', handleDocumentMousemove);\n    document.addEventListener('mouseup', handleDocumentMouseup);\n  }\n\n  return (\n    <div\n      onMouseDown={handleThumbMousedown}\n      style={posThumb}\n      ref={thumbRef}\n      className={styles.thumb}>\n      {isTooltip ? <div className={styles.thumb__tooltip}>{value}</div> : null}\n    </div>\n  );\n}\n\nconst RangeSliderRail = () => {\n  const [styles, rangeSliderId] = useContext(Context);\n  const [minValue, maxValue, valueFrom, valueTo] =\n    mapRangeSliderSelector<number>(rangeSliderId, ['minValue', 'maxValue', 'valueFrom', 'valueTo']);\n  const [isVertical, isRange] = mapRangeSliderSelector<boolean>(rangeSliderId, ['isVertical', 'isRange']);\n\n  const posToPercent = (maxValue - minValue) / 100;\n  const positionFrom = (valueFrom - minValue) / posToPercent;\n  const positionTo = (valueTo - minValue) / posToPercent;\n\n  const posProgress = {\n    left: isVertical ? '0' : `${positionFrom}%`,\n    right: isVertical || !isRange ? '0' : `${100 - positionTo}%`,\n    top: isVertical ? `${positionFrom}%` : '0',\n    bottom: isVertical && isRange ? `${100 - positionTo}%` : '0',\n  }\n\n  return (\n    <div className={styles.rail}>\n      <RangeSliderThumb thumbFor=\"valueFrom\"/>\n      {isRange ? <RangeSliderThumb thumbFor=\"valueTo\"/> : null}\n      <div\n        className={styles.progress}\n        style={posProgress}>\n      </div>\n    </div>\n  );\n}\n\nconst RangeSliderScale = () => {\n  const [styles, rangeSliderId] = useContext(Context);\n  const [minValue, maxValue] = mapRangeSliderSelector<number>(rangeSliderId, ['minValue', 'maxValue']);\n  const [isVertical, isRange] = mapRangeSliderSelector<boolean>(rangeSliderId, ['isVertical', 'isRange']);\n  const [setValueFrom, setValueTo] = useMapRangeSliderDispatch(rangeSliderId, ['valueFrom', 'valueTo']);\n\n\n  const subdivision = <span className={styles.scale__subdivision}/>;\n  const division = <div className={styles.scale__division}>\n    {subdivision}\n    {subdivision}\n    {subdivision}\n    {subdivision}\n    {subdivision}\n  </div>\n\n  const [toggle, setToggle] = useState(true);\n  const posToPercent = (maxValue - minValue) / 100;\n  const handleScaleMousedown = (evt: React.MouseEvent) => {\n    const rect = evt.currentTarget.getBoundingClientRect();\n    let position: number;\n    if (isVertical) {\n      position = (evt.clientY - rect.top) / (rect.height / 100);\n    } else {\n      position = (evt.clientX - rect.left) / (rect.width / 100);\n    }\n    const value = position * posToPercent + minValue;\n    if (isRange) {\n      toggle ? setValueFrom(value) : setValueTo(value);\n      setToggle(!toggle);\n    } else {\n      setValueFrom(value);\n      setToggle(true);\n    }\n  }\n\n  return (\n    <div\n      className={styles.scale}\n      onMouseDown={handleScaleMousedown}>\n      <div className={styles.scale__wrapper}>\n        {division}\n        {division}\n        {division}\n      </div>\n      <div className={styles.scale__values}>\n        <span className={styles.scale__valuesItem}>\n          {minValue}\n        </span>\n        <span className={styles.scale__valuesItem}>\n          {(minValue + ((maxValue - minValue) / 3)).toFixed()}\n        </span>\n        <span className={styles.scale__valuesItem}>\n          {(minValue + ((maxValue - minValue) / 3) * 2).toFixed()}\n        </span>\n        <span className={styles.scale__valuesItem}>\n          {maxValue}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nconst RangeSlider = ({rangeSliderId}: TRangeSliderId) => {\n  const [isVertical, isScale] = mapRangeSliderSelector<boolean>(rangeSliderId, ['isVertical', 'isScale']);\n\n  const styles = isVertical ? stylesVer : stylesHor;\n\n  return (\n    <Context.Provider value={[styles, rangeSliderId]}>\n      <div className={styles.slider}>\n        <RangeSliderRail/>\n        {isScale ? <RangeSliderScale/> : null}\n      </div>\n    </Context.Provider>\n  );\n};\n\nexport default RangeSlider;\n","import React, {useState, useEffect, useMemo} from 'react';\nimport {useMapRangeSliderDispatch, mapRangeSliderSelector} from '../index-store';\nimport RangeSlider from '../range-slider/range-slider';\nimport './control-panel.sass';\n\nconst ControlPanel = ({rangeSliderId}: TRangeSliderId) => {\n  const [minValue, maxValue, valueFrom, valueTo, stepSize] =\n    mapRangeSliderSelector<number>(rangeSliderId, ['minValue','maxValue', 'valueFrom', 'valueFrom', 'stepSize']);\n  const [isRange, isTooltip, isScale, isVertical] =\n    mapRangeSliderSelector<boolean>(rangeSliderId, ['isRange', 'isTooltip', 'isScale', 'isVertical']);\n  const [setMinValue, setMaxValue, setValueFrom, setValueTo, setStepSize, setIsRange, setIsTooltip, setIsScale, setIsVertical] =\n    useMapRangeSliderDispatch(\n      rangeSliderId,\n      ['minValue', 'maxValue', 'valueFrom', 'valueTo', 'stepSize', 'isRange', 'isTooltip', 'isScale', 'isVertical']\n    );\n\n  const [minValueState, setMinValueState] = useState(minValue);\n  const [maxValueState, setMaxValueState] = useState(maxValue);\n  const [valueFromState, setValueFromState] = useState(valueFrom);\n  const [valueToState, setValueToState] = useState(valueTo);\n  const [stepSizeState, setStepSizeState] = useState(stepSize);\n\n  useEffect(() => {\n    setMinValueState(minValue);\n    setMaxValueState(maxValue);\n    setValueFromState(valueFrom);\n    setValueToState(valueTo);\n    setStepSizeState(stepSize);\n  }, [minValue, maxValue, valueFrom, valueTo, stepSize]);\n\n  return (\n    <form className=\"control\">\n      <div className=\"control__slider\">\n        {useMemo(() => <RangeSlider rangeSliderId={rangeSliderId}/>, [rangeSliderId])}\n      </div>\n      <fieldset className=\"control__panel\">\n        <legend>\n          Control Panel\n        </legend>\n        <label className=\"control__panel-item\">\n          <input\n            className=\"control__min-value\"\n            type=\"number\"\n            value={minValueState}\n            onChange={evt => {\n              setMinValueState(Number(evt.target.value));\n            }}\n            onBlur={() => {\n              setMinValue(minValueState);\n              setMinValueState(minValue);\n            }}\n          />\n          Min value\n        </label>\n        <label className=\"control__panel-item\">\n          <input\n            className=\"control__max-value\"\n            type=\"number\"\n            value={maxValueState}\n            onChange={evt => setMaxValueState(Number(evt.target.value))}\n            onBlur={() => {\n              setMaxValue(maxValueState);\n              setMaxValueState(maxValue);\n            }}\n          />\n          Max value\n        </label>\n        <label className=\"control__panel-item\">\n          <input\n            className=\"control__value-from\"\n            type=\"number\"\n            value={valueFromState}\n            onChange={evt => setValueFromState(Number(evt.target.value))}\n            onBlur={() => {\n              setValueFrom(valueFromState);\n              setValueFromState(valueFrom);\n            }}\n          />\n          Value from\n        </label>\n        <label className=\"control__panel-item\">\n          <input\n            className=\"control__value-to\"\n            type=\"number\"\n            value={valueToState}\n            onChange={evt => setValueToState(Number(evt.target.value))}\n            onBlur={() => {\n              setValueTo(valueToState);\n              setValueToState(valueTo);\n            }}\n          />\n          Value to\n        </label>\n        <label className=\"control__panel-item\">\n          <input\n            className=\"control__step-size\"\n            type=\"number\"\n            value={stepSizeState}\n            onChange={evt => setStepSizeState(Number(evt.target.value))}\n            onBlur={() => {\n              setStepSize(stepSizeState);\n              setStepSizeState(stepSize);\n            }}\n          />\n          Step size\n        </label>\n        <label className=\"control__panel-item\">\n          <input\n            className=\"control__is-vertical\"\n            type=\"checkbox\"\n            checked={isVertical}\n            onChange={evt => setIsVertical(Boolean(evt.target.checked))}\n          />\n          Is vertical\n        </label>\n        <label className=\"control__panel-item\">\n          <input\n            className=\"control__is-range\"\n            type=\"checkbox\"\n            checked={isRange}\n            onChange={evt => setIsRange(Boolean(evt.target.checked))}\n          />\n          Is range\n        </label>\n        <label className=\"control__panel-item\">\n          <input\n            className=\"control__is-tooltip\"\n            type=\"checkbox\"\n            checked={isTooltip}\n            onChange={evt => setIsTooltip(Boolean(evt.target.checked))}\n          />\n          Is tooltip\n        </label>\n        <label className=\"control__panel-item\">\n          <input\n            className=\"control__is-scale\"\n            type=\"checkbox\"\n            checked={isScale}\n            onChange={evt => setIsScale(Boolean(evt.target.checked))}\n          />\n          Is scale\n        </label>\n        <label className=\"control__panel-item\">\n          <span className=\"control__range\">\n            {isRange ? valueToState - valueFromState : valueFromState}\n          </span>\n          Range\n        </label>\n      </fieldset>\n    </form>\n  );\n}\n\nexport default ControlPanel;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport store from './index-store';\nimport ControlPanel from './control-panel/control-panel';\nimport './index.sass';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ControlPanel rangeSliderId={0}/>\n      <ControlPanel rangeSliderId={1}/>\n      <ControlPanel rangeSliderId={2}/>\n      <ControlPanel rangeSliderId={3}/>\n    </Provider>\n  </React.StrictMode>,\n  document.querySelector('.app-main')\n);"],"sourceRoot":""}